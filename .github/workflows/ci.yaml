name: CI
on:
  push:
    branches: [main]
  pull_request: {}
jobs:
  build:
    name: Build & Test

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up go
        uses: actions/setup-go@v1
        with:
          go-version: "1.24"
      - run: go test -coverprofile=coverage.txt -covermode=atomic ./...
        if: matrix.os == 'ubuntu-latest'
      - run: go test
        if: matrix.os == 'windows-latest'
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: matrix.os == 'ubuntu-latest'

  test-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          install-only: true
      - name: Run GoReleaser (Dry Run)
        run: make release-dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
